#!/bin/bash
# Easy Mill script to generate single combined gcode file for milling a single sided PCB with a fixed size end mill bit.

FLAT_CAM_PY=~/flatcam/FlatCAM.py
FLAT_CAM_SCRIPT=`pwd`/.flat_cam_out
FLAT_CAM_GCODE=`pwd`/easymill_gcode.nc

GEO_FLIP_X=0        # Use B_Cu and make sure you have an edge cut to mirror

ISO_TOOLSIZE=0.65   # size of tool plus 0.05 to help retain copper around the pads.
ISO_OVERLAP=30      # heavy overlap, could probably be adjusted down to 15-20%
ISO_PASSES=3        # number of isolation passes
ISO_DEPTH=-0.15      # depth of cut
ISO_FEED=90
ISO_SPEED=10000
ISO_FILE=
ISO_NAME=trace_isolation
ISO_GEO=trace_isolation_geo
ISO_CNC=trace_isolation_cnc
ISO_GCODE=`pwd`/.trace_isolation.nc

EDGE_TOOLSIZE=0.6
EDGE_MARGIN=0.3     # toolsize / 2
EDGE_MODE=lr        # tabs on left and right rectangle
EDGE_SIZE=2         # tab size
EDGE_DEPTH=-2.4      # depth of cut
EDGE_STEP=0.2       # maximum cut depth per pass
EDGE_CUTS_FILE=
EDGE_NAME=edgecut
EDGE_CUTS_GEO=edgecut_geo
EDGE_CUTS_CNC=edgecut_cnc
EDGE_CUTS_GCODE=`pwd`/.edgecut.nc

EDGE_FEED=90
EDGE_SPEED=10000

DRILL_TOOLSIZE=0.6
DRILL_DEPTH=-2.4
DRILL_STEP=0.2
DRILL_FEED=90
DRILL_SPEED=10000
DRILL_TOLERANCE=0

declare -a CAT_FILES

for file in ./*.gbr; do
	if [[ $file =~ "Edge_Cuts" ]]; then
		EDGE_CUTS_FILE=`pwd`/$file
		GEO_FLIP_X=$((GEO_FLIP_X+1))
	elif [[ $file =~ "B_Cu" ]]; then
		ISO_FILE=`pwd`/$file
		ISO_NAME=B_Cu
		GEO_FLIP_X=$((GEO_FLIP_X+1))
	elif [[ $file =~ "F_Cu" ]]; then
		ISO_FILE=`pwd`/$file
		ISO_NAME=F_Cu
	fi
done

if [ -f "$ISO_FILE" ]; then
	echo "open_gerber \"$ISO_FILE\" -outname $ISO_NAME">"$FLAT_CAM_SCRIPT"
	if [ -f "$EDGE_CUTS_FILE" ]; then
		echo "open_gerber \"$EDGE_CUTS_FILE\" -outname $EDGE_NAME">>"$FLAT_CAM_SCRIPT"
	fi
	
	if ((GEO_FLIP_X>1)); then
		echo "mirror $ISO_NAME -axis Y -box $EDGE_NAME">>"$FLAT_CAM_SCRIPT"
	fi
	echo "isolate $ISO_NAME -dia $ISO_TOOLSIZE -passes $ISO_PASSES -overlap $ISO_OVERLAP -combine 1 -outname $ISO_GEO">>"$FLAT_CAM_SCRIPT"
	echo "cncjob $ISO_GEO -dia $ISO_TOOLSIZE -z_cut $ISO_DEPTH -z_move 2 -feedrate $ISO_FEED -spindlespeed $ISO_SPEED -outname $ISO_CNC">>"$FLAT_CAM_SCRIPT"
	echo "write_gcode $ISO_CNC \"$ISO_GCODE\"">>"$FLAT_CAM_SCRIPT"
	CAT_FILES+=($ISO_GCODE)
	
	DRILLNO=1
	for file in ./*.drl; do
		DRILL_NAME=drill_$DRILLNO
		DRILLNO=$((DRILLNO+1))
		DRILL_FILE=`pwd`/$file
		DRILL_GCODE=`pwd`/.${DRILL_NAME}.nc
		echo "open_excellon \"$DRILL_FILE\" -outname $DRILL_NAME">>"$FLAT_CAM_SCRIPT"
		if ((GEO_FLIP_X>1)); then
			echo "mirror $DRILL_NAME -axis Y -box $EDGE_NAME">>"$FLAT_CAM_SCRIPT"
		fi
		echo "milldrills $DRILL_NAME -tooldia $DRILL_TOOLSIZE -outname geo_$DRILL_NAME">>"$FLAT_CAM_SCRIPT"
		echo "cncjob geo_$DRILL_NAME -dia $DRILL_TOOLSIZE -z_cut $DRILL_DEPTH -z_move 2 -feedrate $DRILL_FEED -spindlespeed $DRILL_SPEED -dpp $DRILL_STEP -outname cnc_$DRILL_NAME">>"$FLAT_CAM_SCRIPT"
		echo "write_gcode cnc_$DRILL_NAME \"$DRILL_GCODE\"">>"$FLAT_CAM_SCRIPT"
		CAT_FILES+=($DRILL_GCODE)
	done
	
	if [ -f "$EDGE_CUTS_FILE" ]; then
		if ((GEO_FLIP_X>1)); then
			echo "mirror $EDGE_NAME -axis Y -box $EDGE_NAME">>"$FLAT_CAM_SCRIPT"
		fi
		echo "exteriors $EDGE_NAME -outname tmp_$EDGE_CUTS_GEO">>"$FLAT_CAM_SCRIPT"
		echo "geocutout tmp_$EDGE_CUTS_GEO -dia $EDGE_TOOLSIZE -margin $EDGE_MARGIN -gapsize $EDGE_SIZE -gaps $EDGE_MODE -outname $EDGE_CUTS_GEO">>"$FLAT_CAM_SCRIPT"
		echo "delete tmp_$EDGE_CUTS_GEO -f 1">>"$FLAT_CAM_SCRIPT"
		echo "cncjob $EDGE_CUTS_GEO -dia $EDGE_TOOLSIZE -z_cut $EDGE_DEPTH -z_move 2 -feedrate $EDGE_FEED -spindlespeed $EDGE_SPEED -dpp $EDGE_STEP -outname $EDGE_CUTS_CNC">>"$FLAT_CAM_SCRIPT"
		echo "write_gcode $EDGE_CUTS_CNC \"$EDGE_CUTS_GCODE\"">>"$FLAT_CAM_SCRIPT"
		CAT_FILES+=($EDGE_CUTS_GCODE)
	fi
	
	# echo "plot_all">>"$FLAT_CAM_SCRIPT"
	echo "quit_flatcam">>"$FLAT_CAM_SCRIPT"
	
	cat $FLAT_CAM_SCRIPT
	
	mv "$FLAT_CAM_GCODE" "${FLAT_CAM_GCODE}.bak"
	for file in "${CAT_FILES[@]}"
	do
		rm "$file"
   	done
   	
	python3 $FLAT_CAM_PY "--shellfile=$FLAT_CAM_SCRIPT"
	echo "$CAT_LIST"
	
	touch "$FLAT_CAM_GCODE"
	
	for file in "${CAT_FILES[@]}"
	do
		cat "$file">>"$FLAT_CAM_GCODE"
   	done
	
	echo "Combined GCODE written to ${FLAT_CAM_GCODE}"
else
	echo "No copper side gerber file found."
fi






